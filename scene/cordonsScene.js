const { Scenes } = require('telegraf')

const baseMessage = require('../baseMessage')
const keyboard = require('../utils/keyboard')

const cordonsData = require('../data/cordons.json')

const cordonsName = []
for (cordon in cordonsData)
	cordonsName.push(cordon)

const cordonsScene = new Scenes.WizardScene(
	'cordons',

	ctx => {
		ctx.reply(
			'‚ùó –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä–¥–æ–Ω, —á—Ç–æ–±—ã –ø–æ–±–ª–∏–∂–µ —Å –Ω–∏–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è',
			keyboard('üëàüèª –ù–∞–∑–∞–¥', ...cordonsName)
		)
		
		ctx.wizard.next()
	},

	async ctx => {
		const msg = ctx.update.message.text

		if (msg == 'üëàüèª –ù–∞–∑–∞–¥') {
			await ctx.reply('‚ùó –•–æ—Ä–æ—à–æ, –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å')
			await baseMessage(ctx)
			return ctx.scene.leave()
		}


		if (cordonsName.includes(msg)) {
			const title = msg
			const { infra, work } = cordonsData[msg]

			let sendString = `<i>${ title }</i>\n\n<b>–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ä–¥–æ–Ω–∞</b>\n${ infra }\n\n<b>–î–æ–±—Ä–æ–≤–æ–ª—å—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã</b>\n${ work }`

			ctx.reply(sendString, { parse_mode: "HTML" })
		} else {
			return ctx.reply(
				'‚ùó –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä–¥–æ–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞',
				keyboard('üëàüèª –ù–∞–∑–∞–¥', ...cordonsName)
			)
		}
	}
)

module.exports = cordonsScene
